// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: booking.sql

package db

import (
	"context"
	"time"
)

const createBookingRequest = `-- name: CreateBookingRequest :one
INSERT INTO requests(
  user_id,
  type,
  prefered_nurse,
  start_date,
  end_date,
  location
)
VALUES($1,$2,$3,$4,$5,Point($6,$7))
RETURNING id, user_id, type, prefered_nurse, start_date, end_date, location, created_at
`

type CreateBookingRequestParams struct {
	UserID        int64     `json:"user_id"`
	Type          string    `json:"type"`
	PreferedNurse *int64    `json:"prefered_nurse"`
	StartDate     time.Time `json:"start_date"`
	EndDate       time.Time `json:"end_date"`
	Point         float64   `json:"point"`
	Point_2       float64   `json:"point_2"`
}

func (q *Queries) CreateBookingRequest(ctx context.Context, arg CreateBookingRequestParams) (Request, error) {
	row := q.db.QueryRowContext(ctx, createBookingRequest,
		arg.UserID,
		arg.Type,
		arg.PreferedNurse,
		arg.StartDate,
		arg.EndDate,
		arg.Point,
		arg.Point_2,
	)
	var i Request
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Type,
		&i.PreferedNurse,
		&i.StartDate,
		&i.EndDate,
		&i.Location,
		&i.CreatedAt,
	)
	return i, err
}
